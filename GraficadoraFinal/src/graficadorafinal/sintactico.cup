package graficadorafinal;

import java_cup.runtime.Symbol;

parser code
{:
    
    @Override
    public void syntax_error(Symbol s){
        System.out.println("Error en simbolo: "+s.value);
    }

:}

action code {:
    
:}


terminal String linea,cuadrado,rectangulo,circulo,ovalo,trianguloRectangulo,estrella,poligono,pacman; 
terminal String parAbre,parCierra,entero,coma,pcoma,rellena,contorno;
terminal String rojo,azul,celeste,verde,negro,morado,anaranjado,rosado,cafe,amarillo,gris;
terminal String pequeno,mediano,grande;

non terminal String I, L, O, C, T, P;

start with I;

I ::= L;

L ::= O L 
    | O ;

O ::= cuadrado parAbre entero:x coma entero:y coma entero:l coma C:c coma T:t parCierra pcoma {:
    System.out.println("X: "+ x +", Y:" +y +", Lado:" + l +", Color: "+c +", Tipo: "+ t);
    int xi = Integer.parseInt(x);
    int yi = Integer.parseInt(y);
    int li = Integer.parseInt(l);
    Graficar.graficarCuadrado(xi,yi,li,c,t);
:} | linea parAbre entero:x1 coma entero:y1 coma entero:x2 coma entero:y2 coma C:c parCierra pcoma {:
   System.out.println("X1: "+ x1 +", Y1:" + y1 + ", X2:" + x2 + ", Y2:" + y2 + ",Color: "+ c);
    int x1i = Integer.parseInt(x1);
    int y1i = Integer.parseInt(y1);
    int x2i = Integer.parseInt(x2);
    int y2i = Integer.parseInt(y2);
    Graficar.graficarLinea(x1i,y1i,x2i,y2i,c);
:} | rectangulo parAbre entero:x coma entero:y coma entero:b coma entero:a coma C:c coma T:t parCierra pcoma {:
   System.out.println("X: "+ x +", Y:" + y + ", Base:" + b + ", Altura:" + a + ",Color: "+ c +", Tipo: "+ t);
    int xi = Integer.parseInt(x);
    int yi = Integer.parseInt(y);
    int bi = Integer.parseInt(b);
    int ai = Integer.parseInt(a);
    Graficar.graficarRectangulo(xi,yi,bi,ai,c,t);
:} | ovalo parAbre entero:x coma entero:y coma entero:ejex coma entero:ejey coma C:c coma T:t parCierra pcoma {:
   System.out.println("X: "+ x +", Y:" + y + ", Eje X:" + ejex + ", Eje Y: " + ejey + ",Color: "+ c +", Tipo: "+ t);
    int xi = Integer.parseInt(x);
    int yi = Integer.parseInt(y);
    int ejexi = Integer.parseInt(ejex);
    int ejeyi = Integer.parseInt(ejey);
    Graficar.graficarOvalo(xi,yi,ejexi,ejeyi,c,t);
:} | circulo parAbre entero:x coma entero:y coma entero:r coma C:c coma T:t parCierra pcoma {:
   System.out.println("X: "+ x +", Y:" + y + ", Radio: " + r + ",Color: "+ c +", Tipo: "+ t);
    int xi = Integer.parseInt(x);
    int yi = Integer.parseInt(y);
    int ri = Integer.parseInt(r);
    Graficar.graficarCirculo(xi,yi,ri,c,t);
:} | trianguloRectangulo parAbre entero:x coma entero:y coma entero:b coma entero:a coma C:c coma T:t parCierra pcoma {:
   System.out.println("X: "+ x +", Y:" + y + ", Base: " + b + ", Altura: " + a + ",Color: "+ c +", Tipo: "+ t);
    int xi = Integer.parseInt(x);
    int yi = Integer.parseInt(y);
    int bi = Integer.parseInt(b);
    int ai = Integer.parseInt(a);
    Graficar.graficarTriRect(xi,yi,bi,ai,c,t);
:} | estrella parAbre entero:x coma entero:y coma entero:p coma C:c coma T:t parCierra pcoma {:
   System.out.println("X: "+ x +", Y: " + y + ", porcentaje: " + p + ",Color: "+ c +", Tipo: "+ t);
    int xi = Integer.parseInt(x);
    int yi = Integer.parseInt(y);
    int pi = Integer.parseInt(p);
    Graficar.graficarEstrella(xi,yi,pi,c,t);
:} | pacman parAbre entero:x coma entero:y coma P:s coma C:c coma T:t parCierra pcoma {:
    System.out.println("X: "+ x +", Y: " + y + ", tama√±o: " + s + ", Color: "+ c +", Tipo: "+ t);
    int xi = Integer.parseInt(x);
    int yi = Integer.parseInt(y);
    Graficar.graficarPacman(xi, yi, s, c, t);
:};


P ::= pequeno:p {: RESULT = p; :}
        |mediano:m {: RESULT = m; :}
            |grande:g {: RESULT = g; :};

C ::= rojo:r {: RESULT = r; :}
      |azul:a {: RESULT = a; :}
        |celeste:c {: RESULT = c; :}
            |verde:v {: RESULT = v; :}
                |negro:n {: RESULT = n; :}
                    |morado:m {: RESULT = m; :}
                        |anaranjado:a {: RESULT = a; :}
                            |rosado:r {: RESULT = r; :}
                                |cafe:c {: RESULT = c; :}
                                    |amarillo:a {: RESULT = a; :}
                                        |gris:g {: RESULT = g; :};

T ::= rellena:r {: RESULT = r; :}
    |contorno:c {: RESULT = c; :};